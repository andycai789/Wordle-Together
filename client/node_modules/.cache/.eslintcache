[{"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\index.js":"1","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\reportWebVitals.js":"2","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\App.jsx":"3","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Header.jsx":"4","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Game.jsx":"5","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Keyboard.jsx":"6","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Notification.jsx":"7","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Board.jsx":"8","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Row.jsx":"9","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Box.jsx":"10","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\pages\\GamePage.jsx":"11","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\pages\\LobbyPage.jsx":"12","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\pages\\HomePage.jsx":"13","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\ColoredRow.jsx":"14","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Timer.jsx":"15"},{"size":509,"mtime":1650102731433,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1645866072770,"results":"18","hashOfConfig":"17"},{"size":1251,"mtime":1650317064322,"results":"19","hashOfConfig":"17"},{"size":453,"mtime":1650264581850,"results":"20","hashOfConfig":"17"},{"size":4506,"mtime":1650507876390,"results":"21","hashOfConfig":"17"},{"size":3303,"mtime":1650351738318,"results":"22","hashOfConfig":"17"},{"size":860,"mtime":1650360381155,"results":"23","hashOfConfig":"17"},{"size":255,"mtime":1650077384824,"results":"24","hashOfConfig":"17"},{"size":322,"mtime":1650102184482,"results":"25","hashOfConfig":"17"},{"size":221,"mtime":1648458553550,"results":"26","hashOfConfig":"17"},{"size":2991,"mtime":1650499088591,"results":"27","hashOfConfig":"17"},{"size":3643,"mtime":1650334849515,"results":"28","hashOfConfig":"17"},{"size":3623,"mtime":1650507972668,"results":"29","hashOfConfig":"17"},{"size":642,"mtime":1650337639511,"results":"30","hashOfConfig":"17"},{"size":1636,"mtime":1650507671599,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"3uuz8v",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\index.js",[],[],["80","81"],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\App.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Header.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Game.jsx",["82","83"],[],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Board from './Board.jsx'\r\nimport Keyboard from './Keyboard.jsx'\r\nimport Timer from './Timer.jsx'\r\n\r\nconst getDefaultBoxValues = () => {\r\n    return {\r\n        color: 'empty',\r\n        letter: ''\r\n    }\r\n}\r\n\r\nconst createMxNBoard = (m, n) => {\r\n    return Array(m).fill().map(()=>Array(n).fill().map(() => getDefaultBoxValues()))\r\n}\r\n\r\nconst convertBoardRowToString = (boardRow) => {\r\n    return boardRow.map(col => col.letter).join('')\r\n}\r\n\r\nconst inAlphabet = (key) => {    \r\n    const charCode = key.toUpperCase().charCodeAt(0)\r\n    return (key.length === 1) && (charCode > 64) && (charCode < 91) \r\n}\r\n\r\nconst inWordList = (boardRow, wordList) => {\r\n    return wordList.has(convertBoardRowToString(boardRow).toLowerCase())\r\n}\r\n\r\nconst isDeletable = (column) => {\r\n    return column > 0\r\n}\r\n\r\nconst hasFilledRow = (column, maxColumn) => {\r\n    return column === maxColumn\r\n}\r\n\r\nconst hasEmptyBox = (column, maxColumn) => {\r\n    return column < maxColumn\r\n}\r\n\r\nconst setGreenBoxes = (map, boardRow, word) => {\r\n    for (let i = 0; i < boardRow.length; i++) {        \r\n        if (boardRow[i].letter === word[i]) {\r\n            boardRow[i].color = 'green'\r\n            map.get(boardRow[i].letter).val--\r\n        } \r\n    }\r\n}\r\n\r\nconst setYellowBoxes = (map, boardRow) => {\r\n    for (let i = 0; i < boardRow.length; i++) {\r\n        if (boardRow[i].color !== 'green' && map.has(boardRow[i].letter) && map.get(boardRow[i].letter).val > 0) {\r\n            boardRow[i].color = 'yellow'\r\n            map.get(boardRow[i].letter).val--\r\n        }\r\n    }\r\n}\r\n\r\nconst setGreyBoxes = (boardRow) => {\r\n    for (let i = 0; i < boardRow.length; i++) {\r\n        if (boardRow[i].color === 'empty') {\r\n            boardRow[i].color = 'gray'\r\n        } \r\n    }\r\n}\r\n\r\nconst changeColorsInRow = (boardRow, word) => {\r\n    let map = new Map();\r\n    for (let i = 0; i < word.length; i++) {\r\n        if (!map.has(word[i])) {\r\n            map.set(word[i], {val: 1})\r\n        } else {\r\n            map.get(word[i]).val++\r\n        }\r\n    }\r\n    setGreenBoxes(map, boardRow, word)\r\n    setYellowBoxes(map, boardRow)\r\n    setGreyBoxes(boardRow)\r\n}\r\n\r\nconst Game = (\r\n    {\r\n        input, \r\n        colLength, \r\n        word, \r\n        handleKeyClick, \r\n        wordList, \r\n        socket, \r\n        changeTyping, \r\n        handleMessage,\r\n        currentPlayer\r\n    }) => {\r\n    const [board, setBoard] = useState(createMxNBoard(5, 5))\r\n    const maxTime = 4\r\n    const row = useRef(0)\r\n    const col = useRef(0)\r\n\r\n    const getNextPlayer = () => {\r\n        changeTyping(false)\r\n        socket.emit('nextPlayer', row.current, col.current)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('board', board => {\r\n            setBoard(board)\r\n        })\r\n\r\n        socket.on('canType', (newRow, newCol) => {\r\n            row.current = newRow\r\n            col.current = newCol\r\n            changeTyping(true)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const newBoard = JSON.parse(JSON.stringify(board))\r\n\r\n        if (inAlphabet(input.key) && hasEmptyBox(col.current, colLength)) {\r\n            newBoard[row.current][col.current].letter = input.key\r\n            col.current += 1\r\n            setBoard(newBoard)\r\n        } else if (input.key === 'ENTER') {\r\n            if (!hasFilledRow(col.current, colLength)) {\r\n                handleMessage('Not enough letters')\r\n                return\r\n            }\r\n\r\n            if (!inWordList(newBoard[row.current], wordList)) {\r\n                handleMessage('Not in word list')\r\n                return \r\n            }\r\n\r\n            changeColorsInRow(newBoard[row.current], word)\r\n            row.current += 1\r\n            col.current = 0\r\n            setBoard(newBoard)\r\n            getNextPlayer()\r\n        } else if ((input.key === 'BACKSPACE' || input.key === 'DELETE') && isDeletable(col.current)) {\r\n            newBoard[row.current][col.current - 1].letter = ''\r\n            col.current -= 1\r\n            setBoard(newBoard)\r\n        }\r\n    }, [input.time])\r\n\r\n    return (\r\n        <div className='boards'>\r\n            <Timer \r\n                maxTime={maxTime}\r\n                socket={socket}\r\n                currentPlayer={currentPlayer}\r\n                getNextPlayer={getNextPlayer}\r\n                changeTyping={changeTyping}\r\n            />\r\n            <Board board={board}/>\r\n            <Keyboard board={board} onKeyClick={handleKeyClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n",["84","85"],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Keyboard.jsx",["86"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Notification.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Board.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Row.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Box.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\pages\\GamePage.jsx",["87"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\pages\\LobbyPage.jsx",["88"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\pages\\HomePage.jsx",["89"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\ColoredRow.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Timer.jsx",["90","91"],[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":114,"column":8,"nodeType":"98","endLine":114,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":144,"column":8,"nodeType":"98","endLine":144,"endColumn":20,"suggestions":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"104","line":82,"column":8,"nodeType":"98","endLine":82,"endColumn":15,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":68,"column":8,"nodeType":"98","endLine":68,"endColumn":10,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"108","line":60,"column":8,"nodeType":"98","endLine":60,"endColumn":10,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"110","line":84,"column":6,"nodeType":"98","endLine":84,"endColumn":8,"suggestions":"111"},{"ruleId":"96","severity":1,"message":"112","line":18,"column":8,"nodeType":"98","endLine":18,"endColumn":10,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"114","line":47,"column":8,"nodeType":"98","endLine":47,"endColumn":37,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeTyping' and 'socket'. Either include them or remove the dependency array. If 'changeTyping' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["118"],"React Hook useEffect has missing dependencies: 'board', 'colLength', 'getNextPlayer', 'handleMessage', 'input.key', 'word', and 'wordList'. Either include them or remove the dependency array. If 'handleMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["119"],["116"],["117"],"React Hook useEffect has a missing dependency: 'keyboard'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'getPermission', 'navigate', 'permission', 'pressKey', and 'socket'. Either include them or remove the dependency array. If 'getPermission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["121"],"React Hook useEffect has missing dependencies: 'getPermission', 'navigate', 'onSettingsChange', 'permission', and 'socket'. Either include them or remove the dependency array. If 'getPermission' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["122"],"React Hook useEffect has missing dependencies: 'navigate', 'permission', and 'socket'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'maxTime' and 'socket'. Either include them or remove the dependency array. If 'setPlayerSeconds' needs the current value of 'maxTime', you can also switch to useReducer instead of useState and read 'maxTime' in the reducer.",["124"],"React Hook useEffect has missing dependencies: 'changeTyping', 'currentPlayer.id', 'getNextPlayer', and 'socket.id'. Either include them or remove the dependency array. If 'changeTyping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [changeTyping, socket]",{"range":"142","text":"143"},"Update the dependencies array to be: [board, colLength, getNextPlayer, handleMessage, input.key, input.time, word, wordList]",{"range":"144","text":"145"},"Update the dependencies array to be: [board, keyboard]",{"range":"146","text":"147"},"Update the dependencies array to be: [getPermission, navigate, permission, pressKey, socket]",{"range":"148","text":"149"},"Update the dependencies array to be: [getPermission, navigate, onSettingsChange, permission, socket]",{"range":"150","text":"151"},"Update the dependencies array to be: [navigate, permission, socket]",{"range":"152","text":"153"},"Update the dependencies array to be: [maxTime, socket]",{"range":"154","text":"155"},"Update the dependencies array to be: [changeTyping, currentPlayer.id, getNextPlayer, playerSeconds, socket.id, timerSeconds]",{"range":"156","text":"157"},[2963,2965],"[changeTyping, socket]",[4045,4057],"[board, colLength, getNextPlayer, handleMessage, input.key, input.time, word, wordList]",[2305,2312],"[board, keyboard]",[2088,2090],"[getPermission, navigate, permission, pressKey, socket]",[1976,1978],"[getPermission, navigate, onSettingsChange, permission, socket]",[2210,2212],"[navigate, permission, socket]",[593,595],"[maxTime, socket]",[1381,1410],"[changeTyping, currentPlayer.id, getNextPlayer, playerSeconds, socket.id, timerSeconds]"]
[{"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\index.js":"1","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\reportWebVitals.js":"2","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\App.jsx":"3","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Header.jsx":"4","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Game.jsx":"5","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Keyboard.jsx":"6","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Notification.jsx":"7","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Board.jsx":"8","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Row.jsx":"9","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Box.jsx":"10","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Gamepage.jsx":"11","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\GamePage.jsx":"12","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\LobbyPage.jsx":"13","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\HomePage.jsx":"14"},{"size":493,"mtime":1649303563794,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1645866072770,"results":"17","hashOfConfig":"16"},{"size":891,"mtime":1649304082900,"results":"18","hashOfConfig":"16"},{"size":258,"mtime":1649304473936,"results":"19","hashOfConfig":"16"},{"size":4348,"mtime":1649300183706,"results":"20","hashOfConfig":"16"},{"size":3076,"mtime":1648865966345,"results":"21","hashOfConfig":"16"},{"size":448,"mtime":1648692648824,"results":"22","hashOfConfig":"16"},{"size":325,"mtime":1649198982472,"results":"23","hashOfConfig":"16"},{"size":317,"mtime":1648437162982,"results":"24","hashOfConfig":"16"},{"size":221,"mtime":1648458553550,"results":"25","hashOfConfig":"16"},{"size":1057,"mtime":1649303696554,"results":"26","hashOfConfig":"16"},{"size":1057,"mtime":1649303696554,"results":"27","hashOfConfig":"16"},{"size":516,"mtime":1649303872020,"results":"28","hashOfConfig":"16"},{"size":278,"mtime":1649304561949,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3uuz8v",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\index.js",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\reportWebVitals.js",[],[],["74","75"],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\App.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Header.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Game.jsx",["76","77"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Keyboard.jsx",["78"],[],"import '../css/Keyboard.css';\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst getRowLength = board => board.length\r\n\r\nconst getColLength = board => board[0].length\r\n\r\nconst getKeyboard = () => {\r\n    const qwerty = [['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'], \r\n                    ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'], \r\n                    ['Z', 'X', 'C', 'V', 'B', 'N', 'M']]\r\n\r\n    let keyboard = new Array(qwerty.length);\r\n\r\n    for (let i = 0; i < keyboard.length; i++) {\r\n        keyboard[i] = qwerty[i].map(letter => ({color: 'grey', letter: letter}))\r\n    }\r\n\r\n    return keyboard\r\n}\r\n\r\nconst getLetterColorMap = (board) => {\r\n    let map = new Map()\r\n\r\n    for (let row = 0; row < getRowLength(board); row++) {\r\n        for (let col = 0; col < getColLength(board); col++) {\r\n            let letter = board[row][col].letter\r\n            let color = board[row][col].color\r\n\r\n            if (!map.has(letter)) {\r\n                if (color !== 'empty') {\r\n                    map.set(letter, color)\r\n                } \r\n            } else {\r\n                if (color === 'green') {\r\n                    map.set(letter, color)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return map\r\n}\r\n\r\nconst changeKeyboardColors = (board, keyboard) => {\r\n    let letterColorMap = getLetterColorMap(board)\r\n\r\n    for (let row = 0; row < getRowLength(keyboard); row++) {\r\n        for (let col = 0; col < keyboard[row].length; col++) {\r\n            let letter = keyboard[row][col].letter\r\n\r\n            if (letterColorMap.has(letter)) {\r\n                keyboard[row][col].color = letterColorMap.get(letter)\r\n            }\r\n\r\n        }\r\n    }\r\n    return keyboard\r\n}\r\n\r\nconst getBackgroundColor = (color) => {\r\n    if (color === 'green') {\r\n        return '#538d4e'\r\n    } else if (color === 'yellow') {\r\n        return '#b59f3b'\r\n    } else if (color === 'gray') {\r\n        return '#3a3a3c'\r\n    } else {\r\n        return '#818384'\r\n    }\r\n}\r\n\r\nconst Keyboard = ({board, onKeyClick}) => {\r\n    const [keyboard, setKeyboard] = useState(getKeyboard())\r\n\r\n    useEffect( () => {\r\n        const newKeyboard = JSON.parse(JSON.stringify(keyboard))\r\n        setKeyboard(changeKeyboardColors(board, newKeyboard))\r\n    }, [board])\r\n\r\n    return (\r\n        <div className='keyboard'>\r\n            <div>{keyboard[0].map((k, index) => <button style={{ backgroundColor: getBackgroundColor(k.color)}} key={index} onClick={onKeyClick}> {k.letter} </button>)}</div>\r\n            <div>{keyboard[1].map((k, index) => <button style={{ backgroundColor: getBackgroundColor(k.color)}} key={index} onClick={onKeyClick}> {k.letter} </button>)}</div>\r\n            <div>\r\n                <button className='action' onClick={onKeyClick}>Enter</button>\r\n                {keyboard[2].map((k, index) => <button style={{ backgroundColor: getBackgroundColor(k.color)}} key={index} onClick={onKeyClick}> {k.letter} </button>)}\r\n                <button className='action' onClick={onKeyClick}>Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Keyboard;","C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Notification.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Board.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Row.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Box.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\Gamepage.jsx",["79","80"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\GamePage.jsx",["81","82"],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\LobbyPage.jsx",[],[],"C:\\Users\\andyc\\Desktop\\Web Programs\\Wordle with Friends\\client\\src\\components\\HomePage.jsx",[],[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":138,"column":8,"nodeType":"93","endLine":138,"endColumn":20,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":78,"column":8,"nodeType":"93","endLine":78,"endColumn":15,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":2,"column":30,"nodeType":"89","messageId":"90","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"98","line":19,"column":8,"nodeType":"93","endLine":19,"endColumn":10,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"97","line":2,"column":30,"nodeType":"89","messageId":"90","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"98","line":19,"column":8,"nodeType":"93","endLine":19,"endColumn":10,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'board', 'checkWinConditions', 'colLength', 'input.key', 'wordList', and 'wordle'. Either include them or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'keyboard'. Either include it or remove the dependency array.",["104"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'pressKey'. Either include it or remove the dependency array.",["105"],["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [board, checkWinConditions, colLength, input.key, input.time, wordList, wordle]",{"range":"114","text":"115"},"Update the dependencies array to be: [board, keyboard]",{"range":"116","text":"117"},"Update the dependencies array to be: [pressKey]",{"range":"118","text":"119"},{"range":"120","text":"119"},[4063,4075],"[board, checkWinConditions, colLength, input.key, input.time, wordList, wordle]",[2238,2245],"[board, keyboard]",[651,653],"[pressKey]",[651,653]]
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\pages\\\\LobbyPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from 'react';\nimport '../../css/LobbyPage.css';\nimport Row from '../Row.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatToRow = word => {\n  let wordArray = word.toUpperCase().padEnd(7, ' ').split('');\n  return wordArray.map((letter, i) => ({\n    letter: letter,\n    color: ''\n  }));\n};\n\nconst LobbyPage = _ref => {\n  _s();\n\n  let {\n    socket,\n    onSettingsChange\n  } = _ref;\n  let setting = {\n    rows: 3,\n    cols: 7,\n    wordle: 'GRAHAMS',\n    wordList: []\n  };\n  const [rowInput, setRowInput] = useState(5);\n  const [colInput, setColInput] = useState(5);\n  const [players, setPlayers] = useState([]);\n  const [isClient, setIsClient] = useState(true); // const [settings, setSettings] = useState({})\n\n  socket.on('checkIfClient', response => {\n    setIsLeader(response);\n  });\n  socket.on('changeRowSelect', newRow => {\n    setRowInput(newRow);\n  });\n  socket.on('changeColSelect', newCol => {\n    setColInput(newCol);\n  }); // socket on new player, add new player name most likely need to use useState to update the page\n  // socket to change the id code\n\n  const changeRows = event => {\n    setRowInput(event.target.value);\n    socket.emit('newRowSelect', event.target.value);\n  };\n\n  const changeCols = event => {\n    setColInput(event.target.value);\n    socket.emit('newColSelect', event.target.value);\n  };\n\n  const startGame = event => {// if leader allow button presses to startgame\n    // emit rows, cols\n    // emit to get all settings\n    // on sendsettings onSettingsChange(newSettings)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobbyPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \" Settings \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Code: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), socket.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [\"Number of Attempts(Rows):\", /*#__PURE__*/_jsxDEV(\"select\", {\n          disabled: true,\n          name: \"rows\",\n          className: \"settingsSelect\",\n          value: rowInput,\n          onChange: changeRows,\n          children: Array.from({\n            length: 12\n          }, (_, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", i + 5, \" \"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 68\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [\"Number of Letters(Columns):\", /*#__PURE__*/_jsxDEV(\"select\", {\n          disabled: false,\n          name: \"columns\",\n          className: \"settingsSelect\",\n          value: colInput,\n          onChange: changeCols,\n          children: Array.from({\n            length: 12\n          }, (_, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", i + 5, \" \"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 68\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/game\",\n          onClick: startGame,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"startButton\",\n            children: \" Start Game \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playersContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerBoxes\",\n        children: players.map((name, i) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            row: formatToRow(name)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LobbyPage, \"XhGoXLeU1ANAHe9c9tNpAP9ChOY=\");\n\n_c = LobbyPage;\nexport default LobbyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LobbyPage\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/pages/LobbyPage.jsx"],"names":["Link","useState","useRef","Row","formatToRow","word","wordArray","toUpperCase","padEnd","split","map","letter","i","color","LobbyPage","socket","onSettingsChange","setting","rows","cols","wordle","wordList","rowInput","setRowInput","colInput","setColInput","players","setPlayers","isClient","setIsClient","on","response","setIsLeader","newRow","newCol","changeRows","event","target","value","emit","changeCols","startGame","id","Array","from","length","_","name"],"mappings":"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","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport {useState, useRef} from 'react'\r\nimport '../../css/LobbyPage.css';\r\nimport Row from '../Row.jsx';\r\n\r\nconst formatToRow = (word) => {\r\n    let wordArray = word.toUpperCase().padEnd(7, ' ').split('')\r\n    return wordArray.map((letter, i) => ({letter: letter, color: ''}))\r\n  }\r\n\r\nconst LobbyPage = ({socket, onSettingsChange}) => {\r\n    let setting = {rows: 3, cols: 7, wordle: 'GRAHAMS', wordList: []}\r\n    const [rowInput, setRowInput] = useState(5)\r\n    const [colInput, setColInput] = useState(5)\r\n    const [players, setPlayers] = useState([])\r\n    const [isClient, setIsClient] = useState(true)\r\n    // const [settings, setSettings] = useState({})\r\n\r\n    socket.on('checkIfClient', (response) => {\r\n        setIsLeader(response)\r\n    })\r\n\r\n    socket.on('changeRowSelect', (newRow) => {\r\n        setRowInput(newRow)\r\n    })\r\n\r\n    socket.on('changeColSelect', (newCol) => {\r\n        setColInput(newCol)\r\n    })\r\n\r\n    // socket on new player, add new player name most likely need to use useState to update the page\r\n\r\n    // socket to change the id code\r\n\r\n    const changeRows = (event) => {\r\n        setRowInput(event.target.value)\r\n        socket.emit('newRowSelect', event.target.value)\r\n    }\r\n\r\n    const changeCols = (event) => {\r\n        setColInput(event.target.value)\r\n        socket.emit('newColSelect', event.target.value)\r\n    }\r\n\r\n    const startGame = (event) => {\r\n        // if leader allow button presses to startgame\r\n        // emit rows, cols\r\n        // emit to get all settings\r\n        // on sendsettings onSettingsChange(newSettings)\r\n    }\r\n\r\n    return (\r\n        <div className='lobbyPage'>\r\n            <div className=\"settings\">\r\n                <div className='title'> Settings </div>\r\n\r\n                <div className='settingsForm'>\r\n                    <div> Code: </div>\r\n                    {socket.id}\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Attempts(Rows):\r\n                    <select disabled={true} name=\"rows\" className=\"settingsSelect\" value={rowInput} onChange={changeRows} >\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Letters(Columns):\r\n                    <select disabled={false} name=\"columns\" className=\"settingsSelect\" value={colInput} onChange={changeCols}>\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='startButtonContainer'>\r\n                    <Link to='/game' onClick={startGame}> \r\n                        <button className='startButton'> Start Game </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"playersContainer\">\r\n                <div className=\"playerBoxes\">   \r\n                    {players.map((name, i) => {\r\n                        return <Row key={i} row={formatToRow(name)}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LobbyPage"]},"metadata":{},"sourceType":"module"}
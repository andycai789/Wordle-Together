{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\Gamepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Game from './Game.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet settings = async () => {\n  let response = await fetch('/settings');\n  let set = await response.json();\n  return set;\n};\n\nconsole.log(settings());\n\nconst Gamepage = _ref => {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  const [userInput, setUserInput] = useState({\n    key: '',\n    time: 0\n  });\n\n  const pressKey = event => {\n    // if it is your turn \n    let key = event instanceof KeyboardEvent ? event.key.toUpperCase() : event.target.innerText.toUpperCase();\n    socket.emit('key', key);\n    setUserInput({\n      key: key,\n      time: event.timeStamp\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', pressKey);\n    return () => {\n      window.removeEventListener('keydown', pressKey);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Game, {\n      input: userInput,\n      rowLength: settings.rows,\n      colLength: settings.cols,\n      wordle: settings.wordle,\n      wordList: settings.wordList,\n      handleKeyClick: pressKey,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gamepage, \"8n1SnxbBlnuc3Nb6Sck+8YruIqc=\");\n\n_c = Gamepage;\nexport default Gamepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamepage\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/Gamepage.jsx"],"names":["React","useState","useEffect","Game","settings","response","fetch","set","json","console","log","Gamepage","socket","userInput","setUserInput","key","time","pressKey","event","KeyboardEvent","toUpperCase","target","innerText","emit","timeStamp","window","addEventListener","removeEventListener","rows","cols","wordle","wordList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,IAAIC,QAAQ,GAAG,YAAY;AACvB,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA1B;AACA,MAAIC,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAhB;AAEA,SAAOD,GAAP;AACH,CALD;;AAQAE,OAAO,CAACC,GAAR,CAAYN,QAAQ,EAApB;;AAEA,MAAMO,QAAQ,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AAACc,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAD,CAA1C;;AAEA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACA,QAAIH,GAAG,GAAIG,KAAK,YAAYC,aAAlB,GAAmCD,KAAK,CAACH,GAAN,CAAUK,WAAV,EAAnC,GAA6DF,KAAK,CAACG,MAAN,CAAaC,SAAb,CAAuBF,WAAvB,EAAvE;AACAR,IAAAA,MAAM,CAACW,IAAP,CAAY,KAAZ,EAAmBR,GAAnB;AACAD,IAAAA,YAAY,CAAC;AAACC,MAAAA,GAAG,EAAEA,GAAN;AAAWC,MAAAA,IAAI,EAAEE,KAAK,CAACM;AAAvB,KAAD,CAAZ;AACD,GALD;;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCT,QAAnC;AAEA,WAAO,MAAM;AACTQ,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCV,QAAtC;AACH,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQF,sBACE;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,SAAb;AACY,MAAA,SAAS,EAAET,QAAQ,CAACwB,IADhC;AAEY,MAAA,SAAS,EAAExB,QAAQ,CAACyB,IAFhC;AAGY,MAAA,MAAM,EAAEzB,QAAQ,CAAC0B,MAH7B;AAIY,MAAA,QAAQ,EAAE1B,QAAQ,CAAC2B,QAJ/B;AAKY,MAAA,cAAc,EAAEd,QAL5B;AAMY,MAAA,MAAM,EAAEL;AANpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7BD;;GAAMD,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport Game from './Game.jsx'\r\n\r\nlet settings = async () => {\r\n    let response = await fetch('/settings')\r\n    let set = await response.json()\r\n\r\n    return set\r\n}\r\n\r\n\r\nconsole.log(settings())\r\n\r\nconst Gamepage = ({socket}) => {\r\n    const [userInput, setUserInput] = useState({key: '', time: 0})\r\n\r\n    const pressKey = (event) => {\r\n      // if it is your turn \r\n      let key = (event instanceof KeyboardEvent) ? event.key.toUpperCase() : event.target.innerText.toUpperCase()\r\n      socket.emit('key', key)\r\n      setUserInput({key: key, time: event.timeStamp})\r\n    } \r\n  \r\n    useEffect(() => {  \r\n      window.addEventListener('keydown', pressKey)\r\n  \r\n      return () => {\r\n          window.removeEventListener('keydown', pressKey)\r\n      }\r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n        <Game input={userInput} \r\n                    rowLength={settings.rows} \r\n                    colLength={settings.cols} \r\n                    wordle={settings.wordle}\r\n                    wordList={settings.wordList}\r\n                    handleKeyClick={pressKey}\r\n                    socket={socket}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Gamepage"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useEffect,useState,useRef}from'react';import Box from'./Box.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Timer=function Timer(_ref){var maxTime=_ref.maxTime,socket=_ref.socket,currentPlayer=_ref.currentPlayer,getNextPlayer=_ref.getNextPlayer,changeTyping=_ref.changeTyping,alreadyEmit=_ref.alreadyEmit;var _useState=useState(maxTime),_useState2=_slicedToArray(_useState,2),playerSeconds=_useState2[0],setPlayerSeconds=_useState2[1];var _useState3=useState(maxTime+1),_useState4=_slicedToArray(_useState3,2),timerSeconds=_useState4[0],setTimerSeconds=_useState4[1];var inGame=useRef(true);var runOnce=useRef(true);useEffect(function(){socket.on('resetTimer',function(){setPlayerSeconds(maxTime);setTimerSeconds(maxTime+1);runOnce.current=true;});socket.on('endGame',function(){inGame.current=false;});},[]);useEffect(function(){if(!inGame.current){return;}var timer=setTimeout(function(){if(playerSeconds===0){if(runOnce.current){changeTyping(false);runOnce.current=false;}}else{setPlayerSeconds(function(seconds){return seconds-1;});}if(timerSeconds===0){if(!alreadyEmit&&currentPlayer.id===socket.id){getNextPlayer();}}else{setTimerSeconds(function(seconds){return seconds-1;});}},1000);return function(){window.clearTimeout(timer);};},[timerSeconds]);return/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[/*#__PURE__*/_jsx(Box,{color:\"\",letter:Math.floor(playerSeconds/10)}),/*#__PURE__*/_jsx(Box,{color:\"\",letter:playerSeconds%10})]});};export default Timer;","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/Timer.jsx"],"names":["React","useEffect","useState","useRef","Box","Timer","maxTime","socket","currentPlayer","getNextPlayer","changeTyping","alreadyEmit","playerSeconds","setPlayerSeconds","timerSeconds","setTimerSeconds","inGame","runOnce","on","current","timer","setTimeout","seconds","id","window","clearTimeout","Math","floor"],"mappings":"oJAAA,OAAQA,KAAR,CAAeC,SAAf,CAA0BC,QAA1B,CAAoCC,MAApC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAgF,IAA9EC,CAAAA,OAA8E,MAA9EA,OAA8E,CAArEC,MAAqE,MAArEA,MAAqE,CAA7DC,aAA6D,MAA7DA,aAA6D,CAA9CC,aAA8C,MAA9CA,aAA8C,CAA/BC,YAA+B,MAA/BA,YAA+B,CAAjBC,WAAiB,MAAjBA,WAAiB,CAC1F,cAA0CT,QAAQ,CAACI,OAAD,CAAlD,wCAAOM,aAAP,eAAsBC,gBAAtB,eACA,eAAwCX,QAAQ,CAACI,OAAO,CAAG,CAAX,CAAhD,yCAAOQ,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,MAAM,CAAGb,MAAM,CAAC,IAAD,CAArB,CACA,GAAMc,CAAAA,OAAO,CAAGd,MAAM,CAAC,IAAD,CAAtB,CAEAF,SAAS,CAAC,UAAM,CACZM,MAAM,CAACW,EAAP,CAAU,YAAV,CAAwB,UAAM,CAC1BL,gBAAgB,CAACP,OAAD,CAAhB,CACAS,eAAe,CAACT,OAAO,CAAG,CAAX,CAAf,CACAW,OAAO,CAACE,OAAR,CAAkB,IAAlB,CACH,CAJD,EAMAZ,MAAM,CAACW,EAAP,CAAU,SAAV,CAAqB,UAAM,CACvBF,MAAM,CAACG,OAAP,CAAiB,KAAjB,CACH,CAFD,EAGH,CAVQ,CAUN,EAVM,CAAT,CAYAlB,SAAS,CAAC,UAAM,CACZ,GAAI,CAACe,MAAM,CAACG,OAAZ,CAAqB,CACjB,OACH,CAED,GAAMC,CAAAA,KAAK,CAAGC,UAAU,CAAC,UAAM,CAC3B,GAAIT,aAAa,GAAK,CAAtB,CAA0B,CACtB,GAAIK,OAAO,CAACE,OAAZ,CAAqB,CACjBT,YAAY,CAAC,KAAD,CAAZ,CACAO,OAAO,CAACE,OAAR,CAAkB,KAAlB,CACH,CACJ,CALD,IAKO,CACHN,gBAAgB,CAAC,SAAAS,OAAO,QAAIA,CAAAA,OAAO,CAAG,CAAd,EAAR,CAAhB,CACH,CAED,GAAIR,YAAY,GAAK,CAArB,CAAwB,CACpB,GAAI,CAACH,WAAD,EAAgBH,aAAa,CAACe,EAAd,GAAqBhB,MAAM,CAACgB,EAAhD,CAAoD,CAChDd,aAAa,GAChB,CACJ,CAJD,IAIO,CACHM,eAAe,CAAC,SAAAO,OAAO,QAAIA,CAAAA,OAAO,CAAG,CAAd,EAAR,CAAf,CACH,CACJ,CAjBuB,CAiBrB,IAjBqB,CAAxB,CAmBA,MAAO,WAAM,CACTE,MAAM,CAACC,YAAP,CAAoBL,KAApB,EACH,CAFD,CAGH,CA3BQ,CA2BN,CAACN,YAAD,CA3BM,CAAT,CA6BA,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,KAAC,GAAD,EAAK,KAAK,CAAC,EAAX,CAAc,MAAM,CAAEY,IAAI,CAACC,KAAL,CAAWf,aAAa,CAAG,EAA3B,CAAtB,EADJ,cAEI,KAAC,GAAD,EAAK,KAAK,CAAC,EAAX,CAAc,MAAM,CAAEA,aAAa,CAAG,EAAtC,EAFJ,GADJ,CAMH,CArDD,CAuDA,cAAeP,CAAAA,KAAf","sourcesContent":["import {React, useEffect, useState, useRef} from 'react'\r\nimport Box from './Box.jsx';\r\n\r\nconst Timer = ({maxTime, socket, currentPlayer, getNextPlayer, changeTyping, alreadyEmit}) => {\r\n    const [playerSeconds, setPlayerSeconds] = useState(maxTime)\r\n    const [timerSeconds, setTimerSeconds] = useState(maxTime + 1)\r\n    const inGame = useRef(true)\r\n    const runOnce = useRef(true)\r\n\r\n    useEffect(() => {\r\n        socket.on('resetTimer', () => {\r\n            setPlayerSeconds(maxTime)\r\n            setTimerSeconds(maxTime + 1)\r\n            runOnce.current = true\r\n        })\r\n\r\n        socket.on('endGame', () => {\r\n            inGame.current = false\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!inGame.current) {\r\n            return\r\n        }\r\n\r\n        const timer = setTimeout(() => {\r\n            if (playerSeconds === 0 ) {\r\n                if (runOnce.current) {\r\n                    changeTyping(false)\r\n                    runOnce.current = false\r\n                }\r\n            } else {\r\n                setPlayerSeconds(seconds => seconds - 1)\r\n            }\r\n\r\n            if (timerSeconds === 0) {\r\n                if (!alreadyEmit && currentPlayer.id === socket.id) {\r\n                    getNextPlayer()\r\n                }\r\n            } else {\r\n                setTimerSeconds(seconds => seconds - 1)\r\n            }\r\n        }, 1000); \r\n\r\n        return () => {\r\n            window.clearTimeout(timer);\r\n        }\r\n    }, [timerSeconds])\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <Box color='' letter={Math.floor(playerSeconds / 10)}/>\r\n            <Box color='' letter={playerSeconds % 10}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer"]},"metadata":{},"sourceType":"module"}
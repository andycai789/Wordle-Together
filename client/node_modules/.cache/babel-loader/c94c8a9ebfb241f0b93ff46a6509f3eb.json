{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\pages\\\\GamePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Game from '../Game.jsx';\nimport PlayerName from '../PlayerName.jsx';\nimport '../../css/GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GamePage = _ref => {\n  _s();\n\n  let {\n    socket,\n    settings\n  } = _ref;\n  console.log(settings);\n  const [userInput, setUserInput] = useState({\n    key: '',\n    time: 0\n  });\n  const canType = useRef(false);\n  const [currentPlayer, setCurrentPlayer] = useState('');\n\n  const pressKey = event => {\n    if (canType.current) {\n      let key = event instanceof KeyboardEvent ? event.key.toUpperCase() : event.target.innerText.toUpperCase();\n      socket.emit('key', key);\n      setUserInput({\n        key: key,\n        time: event.timeStamp\n      });\n    }\n  };\n\n  const changeTyping = status => {\n    canType.current = status;\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', pressKey);\n    socket.on('setCurrentPlayer', name => {\n      console.log(\"HERE\");\n      setCurrentPlayer(name);\n    });\n    return () => {\n      window.removeEventListener('keydown', pressKey);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gamePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerTurn\",\n      children: /*#__PURE__*/_jsxDEV(PlayerName, {\n        name: currentPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      input: userInput,\n      rowLength: settings.rows,\n      colLength: settings.cols,\n      wordle: settings.wordle,\n      wordList: new Set(settings.wordList),\n      handleKeyClick: pressKey,\n      socket: socket,\n      changeTyping: changeTyping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GamePage, \"irAyvAPVQjnbF0ZC01rYdg1/BOs=\");\n\n_c = GamePage;\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/pages/GamePage.jsx"],"names":["React","useState","useEffect","useRef","Game","PlayerName","GamePage","socket","settings","console","log","userInput","setUserInput","key","time","canType","currentPlayer","setCurrentPlayer","pressKey","event","current","KeyboardEvent","toUpperCase","target","innerText","emit","timeStamp","changeTyping","status","window","addEventListener","on","name","removeEventListener","rows","cols","wordle","Set","wordList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAuB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AAACY,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAD,CAA1C;AACA,QAAMC,OAAO,GAAGZ,MAAM,CAAC,KAAD,CAAtB;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMiB,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAIJ,OAAO,CAACK,OAAZ,EAAqB;AACjB,UAAIP,GAAG,GAAIM,KAAK,YAAYE,aAAlB,GAAmCF,KAAK,CAACN,GAAN,CAAUS,WAAV,EAAnC,GAA6DH,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBF,WAAvB,EAAvE;AACAf,MAAAA,MAAM,CAACkB,IAAP,CAAY,KAAZ,EAAmBZ,GAAnB;AACAD,MAAAA,YAAY,CAAC;AAACC,QAAAA,GAAG,EAAEA,GAAN;AAAWC,QAAAA,IAAI,EAAEK,KAAK,CAACO;AAAvB,OAAD,CAAZ;AACH;AACJ,GAND;;AAQA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7Bb,IAAAA,OAAO,CAACK,OAAR,GAAkBQ,MAAlB;AACH,GAFD;;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCZ,QAAnC;AACAX,IAAAA,MAAM,CAACwB,EAAP,CAAU,kBAAV,EAA+BC,IAAD,IAAU;AACpCvB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAO,MAAAA,gBAAgB,CAACe,IAAD,CAAhB;AACH,KAHD;AAIF,WAAO,MAAM;AACPH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,SAA3B,EAAsCf,QAAtC;AACL,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEL,SADX;AAEI,MAAA,SAAS,EAAEH,QAAQ,CAAC0B,IAFxB;AAGI,MAAA,SAAS,EAAE1B,QAAQ,CAAC2B,IAHxB;AAII,MAAA,MAAM,EAAE3B,QAAQ,CAAC4B,MAJrB;AAKI,MAAA,QAAQ,EAAE,IAAIC,GAAJ,CAAQ7B,QAAQ,CAAC8B,QAAjB,CALd;AAMI,MAAA,cAAc,EAAEpB,QANpB;AAOI,MAAA,MAAM,EAAEX,MAPZ;AAQI,MAAA,YAAY,EAAEoB;AARlB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA/CD;;GAAMrB,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport Game from '../Game.jsx'\r\nimport PlayerName from '../PlayerName.jsx'\r\nimport '../../css/GamePage.css';\r\n\r\nconst GamePage = ({socket, settings}) => {\r\n    console.log(settings)\r\n\r\n    const [userInput, setUserInput] = useState({key: '', time: 0})\r\n    const canType = useRef(false)\r\n    const [currentPlayer, setCurrentPlayer] = useState('')\r\n\r\n    const pressKey = (event) => {\r\n        if (canType.current) {\r\n            let key = (event instanceof KeyboardEvent) ? event.key.toUpperCase() : event.target.innerText.toUpperCase()\r\n            socket.emit('key', key)\r\n            setUserInput({key: key, time: event.timeStamp})\r\n        }\r\n    }\r\n\r\n    const changeTyping = (status) => {\r\n        canType.current = status\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', pressKey)\r\n        socket.on('setCurrentPlayer', (name) => {\r\n            console.log(\"HERE\")\r\n            setCurrentPlayer(name)\r\n        })\r\n      return () => {\r\n            window.removeEventListener('keydown', pressKey)\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"gamePage\">\r\n            <div className=\"playerTurn\">\r\n                <PlayerName name={currentPlayer}/>\r\n            </div>\r\n\r\n            <Game \r\n                input={userInput} \r\n                rowLength={settings.rows} \r\n                colLength={settings.cols} \r\n                wordle={settings.wordle}\r\n                wordList={new Set(settings.wordList)}\r\n                handleKeyClick={pressKey}\r\n                socket={socket}\r\n                changeTyping={changeTyping}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePage"]},"metadata":{},"sourceType":"module"}
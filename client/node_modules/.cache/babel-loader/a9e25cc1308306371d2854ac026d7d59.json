{"ast":null,"code":"import _slicedToArray from\"C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Link,useNavigate}from\"react-router-dom\";import{useState,useEffect}from'react';import'../../css/LobbyPage.css';import ColoredRow from'../ColoredRow.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LobbyPage=function LobbyPage(_ref){var socket=_ref.socket,onSettingsChange=_ref.onSettingsChange,permission=_ref.permission,getPermission=_ref.getPermission;var _useState=useState(5),_useState2=_slicedToArray(_useState,2),rowInput=_useState2[0],setRowInput=_useState2[1];var _useState3=useState(5),_useState4=_slicedToArray(_useState3,2),colInput=_useState4[0],setColInput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),players=_useState6[0],setPlayers=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLeader=_useState8[0],setIsLeader=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),roomCode=_useState10[0],setRoomCode=_useState10[1];var navigate=useNavigate();var changeRows=function changeRows(event){setRowInput(event.target.value);socket.emit('newRowSelect',event.target.value);};var changeCols=function changeCols(event){setColInput(event.target.value);socket.emit('newColSelect',event.target.value);};var startGame=function startGame(event){if(isLeader){permission.current='game';socket.emit('startGame');}};var getPlayerColor=function getPlayerColor(player){if(player.leader){return'yellow';}else if(player.id===socket.id){return'green';}else{return'none';}};useEffect(function(){if(getPermission()!=='lobby'){navigate('/',{replace:true});return;}socket.on('isLeader',function(){setIsLeader(true);});socket.on('changeCode',function(response){setRoomCode(response);});socket.on('changeRowSelect',function(newRow){setRowInput(newRow);});socket.on('changeColSelect',function(newCol){setColInput(newCol);});socket.on('players',function(response){setPlayers(response);});socket.on('startGameForPlayers',function(settings){onSettingsChange(settings);permission.current='game';navigate('/game',{replace:true});});socket.emit('initialLobbySettings');},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"lobbyPage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-settings\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-title\",children:\" Settings \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settingsForm\",children:[/*#__PURE__*/_jsx(\"div\",{children:\" Code: \"}),roomCode]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settingsForm\",children:[\"Number of Attempts(Rows):\",/*#__PURE__*/_jsx(\"select\",{disabled:!isLeader,className:\"settingsSelect\",value:rowInput,onChange:changeRows,children:Array.from({length:12},function(_,i){return/*#__PURE__*/_jsxs(\"option\",{children:[\" \",i+5,\" \"]},i);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settingsForm\",children:[\"Number of Letters(Columns):\",/*#__PURE__*/_jsx(\"select\",{disabled:!isLeader,className:\"settingsSelect\",value:colInput,onChange:changeCols,children:Array.from({length:12},function(_,i){return/*#__PURE__*/_jsxs(\"option\",{children:[\" \",i+5,\" \"]},i);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"startButtonContainer\",children:/*#__PURE__*/_jsx(Link,{to:isLeader&&'/game',replace:true,onClick:startGame,children:/*#__PURE__*/_jsx(\"button\",{disabled:!isLeader,className:\"startButton\",children:\" Start Game \"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"playersContainer\",children:players.map(function(player,i){return/*#__PURE__*/_jsx(ColoredRow,{name:player.name,color:getPlayerColor(player)},i);})})]});};export default LobbyPage;","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/pages/LobbyPage.jsx"],"names":["Link","useNavigate","useState","useEffect","ColoredRow","LobbyPage","socket","onSettingsChange","permission","getPermission","rowInput","setRowInput","colInput","setColInput","players","setPlayers","isLeader","setIsLeader","roomCode","setRoomCode","navigate","changeRows","event","target","value","emit","changeCols","startGame","current","getPlayerColor","player","leader","id","replace","on","response","newRow","newCol","settings","Array","from","length","_","i","map","name"],"mappings":"oJAAA,OAAQA,IAAR,CAAcC,WAAd,KAAgC,kBAAhC,CACA,OAAQC,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2D,IAAzDC,CAAAA,MAAyD,MAAzDA,MAAyD,CAAjDC,gBAAiD,MAAjDA,gBAAiD,CAA/BC,UAA+B,MAA/BA,UAA+B,CAAnBC,aAAmB,MAAnBA,aAAmB,CACzE,cAAgCP,QAAQ,CAAC,CAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAAgCT,QAAQ,CAAC,CAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAA8BX,QAAQ,CAAC,EAAD,CAAtC,yCAAOY,OAAP,eAAgBC,UAAhB,eACA,eAAgCb,QAAQ,CAAC,KAAD,CAAxC,yCAAOc,QAAP,eAAiBC,WAAjB,eACA,eAAgCf,QAAQ,CAAC,EAAD,CAAxC,0CAAOgB,QAAP,gBAAiBC,WAAjB,gBACA,GAAIC,CAAAA,QAAQ,CAAGnB,WAAW,EAA1B,CAEA,GAAMoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1BX,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACAlB,MAAM,CAACmB,IAAP,CAAY,cAAZ,CAA4BH,KAAK,CAACC,MAAN,CAAaC,KAAzC,EACH,CAHD,CAKA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACJ,KAAD,CAAW,CAC1BT,WAAW,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACAlB,MAAM,CAACmB,IAAP,CAAY,cAAZ,CAA4BH,KAAK,CAACC,MAAN,CAAaC,KAAzC,EACH,CAHD,CAKA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACL,KAAD,CAAW,CACzB,GAAIN,QAAJ,CAAc,CACVR,UAAU,CAACoB,OAAX,CAAqB,MAArB,CACAtB,MAAM,CAACmB,IAAP,CAAY,WAAZ,EACH,CACJ,CALD,CAOA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAY,CAC/B,GAAIA,MAAM,CAACC,MAAX,CAAmB,CACf,MAAO,QAAP,CACH,CAFD,IAEO,IAAID,MAAM,CAACE,EAAP,GAAc1B,MAAM,CAAC0B,EAAzB,CAA6B,CAChC,MAAO,OAAP,CACH,CAFM,IAEA,CACH,MAAO,MAAP,CACH,CACJ,CARD,CAUA7B,SAAS,CAAC,UAAM,CACZ,GAAIM,aAAa,KAAO,OAAxB,CAAiC,CAC7BW,QAAQ,CAAC,GAAD,CAAM,CAACa,OAAO,CAAE,IAAV,CAAN,CAAR,CACA,OACH,CAED3B,MAAM,CAAC4B,EAAP,CAAU,UAAV,CAAsB,UAAM,CAACjB,WAAW,CAAC,IAAD,CAAX,CAAkB,CAA/C,EACAX,MAAM,CAAC4B,EAAP,CAAU,YAAV,CAAwB,SAACC,QAAD,CAAc,CAAChB,WAAW,CAACgB,QAAD,CAAX,CAAsB,CAA7D,EACA7B,MAAM,CAAC4B,EAAP,CAAU,iBAAV,CAA6B,SAACE,MAAD,CAAY,CAACzB,WAAW,CAACyB,MAAD,CAAX,CAAoB,CAA9D,EACA9B,MAAM,CAAC4B,EAAP,CAAU,iBAAV,CAA6B,SAACG,MAAD,CAAY,CAACxB,WAAW,CAACwB,MAAD,CAAX,CAAoB,CAA9D,EACA/B,MAAM,CAAC4B,EAAP,CAAU,SAAV,CAAqB,SAACC,QAAD,CAAc,CAACpB,UAAU,CAACoB,QAAD,CAAV,CAAqB,CAAzD,EAEA7B,MAAM,CAAC4B,EAAP,CAAU,qBAAV,CAAiC,SAACI,QAAD,CAAc,CAC3C/B,gBAAgB,CAAC+B,QAAD,CAAhB,CACA9B,UAAU,CAACoB,OAAX,CAAqB,MAArB,CACAR,QAAQ,CAAC,OAAD,CAAU,CAACa,OAAO,CAAE,IAAV,CAAV,CAAR,CACH,CAJD,EAMA3B,MAAM,CAACmB,IAAP,CAAY,sBAAZ,EACH,CAnBQ,CAmBN,EAnBM,CAAT,CAqBA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,aAAK,SAAS,CAAC,eAAf,wBACI,YAAK,SAAS,CAAC,YAAf,wBADJ,cAGI,aAAK,SAAS,CAAC,cAAf,wBACI,gCADJ,CAEKP,QAFL,GAHJ,cAQI,aAAK,SAAS,CAAC,cAAf,oDAEI,eAAQ,QAAQ,CAAE,CAACF,QAAnB,CAA6B,SAAS,CAAC,gBAAvC,CAAwD,KAAK,CAAEN,QAA/D,CAAyE,QAAQ,CAAEW,UAAnF,UACKkB,KAAK,CAACC,IAAN,CAAW,CAACC,MAAM,CAAE,EAAT,CAAX,CAAyB,SAACC,CAAD,CAAGC,CAAH,CAAS,CAAC,mBAAO,8BAAkBA,CAAC,CAAG,CAAtB,OAAaA,CAAb,CAAP,CAA0C,CAA7E,CADL,EAFJ,GARJ,cAeI,aAAK,SAAS,CAAC,cAAf,sDAEI,eAAQ,QAAQ,CAAE,CAAC3B,QAAnB,CAA6B,SAAS,CAAC,gBAAvC,CAAwD,KAAK,CAAEJ,QAA/D,CAAyE,QAAQ,CAAEc,UAAnF,UACKa,KAAK,CAACC,IAAN,CAAW,CAACC,MAAM,CAAE,EAAT,CAAX,CAAyB,SAACC,CAAD,CAAGC,CAAH,CAAS,CAAC,mBAAO,8BAAkBA,CAAC,CAAG,CAAtB,OAAaA,CAAb,CAAP,CAA0C,CAA7E,CADL,EAFJ,GAfJ,cAsBI,YAAK,SAAS,CAAC,sBAAf,uBACI,KAAC,IAAD,EAAM,EAAE,CAAE3B,QAAQ,EAAI,OAAtB,CAA+B,OAAO,KAAtC,CAAuC,OAAO,CAAEW,SAAhD,uBACI,eAAQ,QAAQ,CAAE,CAACX,QAAnB,CAA6B,SAAS,CAAC,aAAvC,0BADJ,EADJ,EAtBJ,GADJ,cA8BI,YAAK,SAAS,CAAC,kBAAf,UACKF,OAAO,CAAC8B,GAAR,CAAY,SAACd,MAAD,CAASa,CAAT,CAAe,CACxB,mBAAO,KAAC,UAAD,EAAoB,IAAI,CAAEb,MAAM,CAACe,IAAjC,CAAuC,KAAK,CAAEhB,cAAc,CAACC,MAAD,CAA5D,EAAiBa,CAAjB,CAAP,CACH,CAFA,CADL,EA9BJ,GADJ,CAsCH,CA9FD,CAgGA,cAAetC,CAAAA,SAAf","sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react'\r\nimport '../../css/LobbyPage.css';\r\nimport ColoredRow from '../ColoredRow.jsx';\r\n\r\nconst LobbyPage = ({socket, onSettingsChange, permission, getPermission}) => {\r\n    const [rowInput, setRowInput] = useState(5)\r\n    const [colInput, setColInput] = useState(5)\r\n    const [players, setPlayers] = useState([])\r\n    const [isLeader, setIsLeader] = useState(false)\r\n    const [roomCode, setRoomCode] = useState('')\r\n    let navigate = useNavigate()\r\n\r\n    const changeRows = (event) => {\r\n        setRowInput(event.target.value)\r\n        socket.emit('newRowSelect', event.target.value)\r\n    }\r\n\r\n    const changeCols = (event) => {\r\n        setColInput(event.target.value)\r\n        socket.emit('newColSelect', event.target.value)\r\n    }\r\n\r\n    const startGame = (event) => {\r\n        if (isLeader) {\r\n            permission.current = 'game'\r\n            socket.emit('startGame')\r\n        }\r\n    }\r\n\r\n    const getPlayerColor = (player) => {\r\n        if (player.leader) {\r\n            return 'yellow'\r\n        } else if (player.id === socket.id) {\r\n            return 'green'\r\n        } else {\r\n            return 'none'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (getPermission() !== 'lobby') {\r\n            navigate('/', {replace: true})\r\n            return\r\n        }\r\n\r\n        socket.on('isLeader', () => {setIsLeader(true)})\r\n        socket.on('changeCode', (response) => {setRoomCode(response)})\r\n        socket.on('changeRowSelect', (newRow) => {setRowInput(newRow)})\r\n        socket.on('changeColSelect', (newCol) => {setColInput(newCol)})\r\n        socket.on('players', (response) => {setPlayers(response)})\r\n\r\n        socket.on('startGameForPlayers', (settings) => {\r\n            onSettingsChange(settings)\r\n            permission.current = 'game'\r\n            navigate('/game', {replace: true})\r\n        })\r\n\r\n        socket.emit('initialLobbySettings') \r\n    }, [])\r\n\r\n    return (\r\n        <div className='lobbyPage'>\r\n            <div className=\"game-settings\">\r\n                <div className='game-title'> Settings </div>\r\n\r\n                <div className='settingsForm'>\r\n                    <div> Code: </div>\r\n                    {roomCode}\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Attempts(Rows):\r\n                    <select disabled={!isLeader} className=\"settingsSelect\" value={rowInput} onChange={changeRows} >\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Letters(Columns):\r\n                    <select disabled={!isLeader} className=\"settingsSelect\" value={colInput} onChange={changeCols}>\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='startButtonContainer'>\r\n                    <Link to={isLeader && '/game'} replace onClick={startGame}> \r\n                        <button disabled={!isLeader} className='startButton'> Start Game </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"playersContainer\">\r\n                {players.map((player, i) => {\r\n                    return <ColoredRow key={i} name={player.name} color={getPlayerColor(player)}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LobbyPage"]},"metadata":{},"sourceType":"module"}
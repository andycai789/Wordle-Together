{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\GamePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Game from './Game.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GamePage = _ref => {\n  _s();\n\n  let {\n    socket,\n    settings\n  } = _ref;\n  const [userInput, setUserInput] = useState({\n    key: '',\n    time: 0\n  });\n\n  const pressKey = event => {\n    let key = event instanceof KeyboardEvent ? event.key.toUpperCase() : event.target.innerText.toUpperCase();\n    socket.emit('key', key);\n    setUserInput({\n      key: key,\n      time: event.timeStamp\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', pressKey);\n    return () => {\n      window.removeEventListener('keydown', pressKey);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Game, {\n      input: userInput,\n      rowLength: settings.rows,\n      colLength: settings.cols,\n      wordle: settings.wordle,\n      wordList: new Set(settings.wordList),\n      handleKeyClick: pressKey,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GamePage, \"8n1SnxbBlnuc3Nb6Sck+8YruIqc=\");\n\n_c = GamePage;\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/GamePage.jsx"],"names":["React","useState","useEffect","useRef","Game","GamePage","socket","settings","userInput","setUserInput","key","time","pressKey","event","KeyboardEvent","toUpperCase","target","innerText","emit","timeStamp","window","addEventListener","removeEventListener","rows","cols","wordle","Set","wordList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,QAAQ,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAuB;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC;AAACS,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAD,CAA1C;;AAEA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIH,GAAG,GAAIG,KAAK,YAAYC,aAAlB,GAAmCD,KAAK,CAACH,GAAN,CAAUK,WAAV,EAAnC,GAA6DF,KAAK,CAACG,MAAN,CAAaC,SAAb,CAAuBF,WAAvB,EAAvE;AACAT,IAAAA,MAAM,CAACY,IAAP,CAAY,KAAZ,EAAmBR,GAAnB;AACAD,IAAAA,YAAY,CAAC;AAACC,MAAAA,GAAG,EAAEA,GAAN;AAAWC,MAAAA,IAAI,EAAEE,KAAK,CAACM;AAAvB,KAAD,CAAZ;AACD,GAJD;;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCT,QAAnC;AACF,WAAO,MAAM;AACTQ,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCV,QAAtC;AACH,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEJ,SADX;AAEI,MAAA,SAAS,EAAED,QAAQ,CAACgB,IAFxB;AAGI,MAAA,SAAS,EAAEhB,QAAQ,CAACiB,IAHxB;AAII,MAAA,MAAM,EAAEjB,QAAQ,CAACkB,MAJrB;AAKI,MAAA,QAAQ,EAAE,IAAIC,GAAJ,CAAQnB,QAAQ,CAACoB,QAAjB,CALd;AAMI,MAAA,cAAc,EAAEf,QANpB;AAOI,MAAA,MAAM,EAAEN;AAPZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5BD;;GAAMD,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport Game from './Game.jsx'\r\n\r\nconst GamePage = ({socket, settings}) => {\r\n    const [userInput, setUserInput] = useState({key: '', time: 0})\r\n    \r\n    const pressKey = (event) => {\r\n      let key = (event instanceof KeyboardEvent) ? event.key.toUpperCase() : event.target.innerText.toUpperCase()\r\n      socket.emit('key', key)\r\n      setUserInput({key: key, time: event.timeStamp})\r\n    } \r\n  \r\n    useEffect(() => {\r\n        window.addEventListener('keydown', pressKey)\r\n      return () => {\r\n          window.removeEventListener('keydown', pressKey)\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Game \r\n                input={userInput} \r\n                rowLength={settings.rows} \r\n                colLength={settings.cols} \r\n                wordle={settings.wordle}\r\n                wordList={new Set(settings.wordList)}\r\n                handleKeyClick={pressKey}\r\n                socket={socket}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePage"]},"metadata":{},"sourceType":"module"}
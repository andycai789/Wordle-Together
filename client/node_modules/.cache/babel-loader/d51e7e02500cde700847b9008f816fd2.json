{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\pages\\\\LobbyPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef } from 'react';\nimport '../../css/LobbyPage.css';\nimport Row from '../Row.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatToRow = word => {\n  let wordArray = word.toUpperCase().padEnd(7, ' ').split('');\n  return wordArray.map((letter, i) => ({\n    letter: letter,\n    color: ''\n  }));\n};\n\nconst LobbyPage = _ref => {\n  _s();\n\n  let {\n    socket,\n    onSettingChange\n  } = _ref;\n  let setting = {\n    rows: 3,\n    cols: 7,\n    wordle: 'GRAHAMS',\n    wordList: []\n  };\n  let players = [\"Ansadf\", \"Bnasdf\", \"Cnasdf\", \"Dnsdf\", \"Enweqr\", \"Fnzxcv\", \"Gnzxcv\", \"Hnzxcv\", \"Inzxcv\"];\n  const rows = useRef(5);\n  const cols = useRef(5);\n\n  const changeRows = event => {\n    rows.current = event.target.value;\n    console.log(rows.current);\n  };\n\n  const changeCols = event => {\n    cols.current = event.target.value;\n    console.log(cols.current);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobbyPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \" Settings \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [\"Number of Attempts(Rows):\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"rows\",\n          className: \"settingsSelect\",\n          onChange: changeRows,\n          children: Array.from({\n            length: 12\n          }, (_, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", i + 5, \" \"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 68\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [\"Number of Letters(Columns):\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"columns\",\n          className: \"settingsSelect\",\n          onChange: changeCols,\n          children: Array.from({\n            length: 12\n          }, (_, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", i + 5, \" \"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 68\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/game\",\n          onClick: () => onSettingChange(setting),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"startButton\",\n            children: \" Start Game \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playersContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerBoxes\",\n        children: players.map((name, i) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            row: formatToRow(name)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LobbyPage, \"o6BlH2FvUCM5QvZlEMSwgbfw8d0=\");\n\n_c = LobbyPage;\nexport default LobbyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LobbyPage\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/pages/LobbyPage.jsx"],"names":["Link","useState","useRef","Row","formatToRow","word","wordArray","toUpperCase","padEnd","split","map","letter","i","color","LobbyPage","socket","onSettingChange","setting","rows","cols","wordle","wordList","players","changeRows","event","current","target","value","console","log","changeCols","Array","from","length","_","name"],"mappings":"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","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport {useState, useRef} from 'react'\r\nimport '../../css/LobbyPage.css';\r\nimport Row from '../Row.jsx';\r\n\r\nconst formatToRow = (word) => {\r\n    let wordArray = word.toUpperCase().padEnd(7, ' ').split('')\r\n    return wordArray.map((letter, i) => ({letter: letter, color: ''}))\r\n  }\r\n\r\nconst LobbyPage = ({socket, onSettingChange}) => {\r\n\r\n    let setting = {rows: 3, cols: 7, wordle: 'GRAHAMS', wordList: []}\r\n    let players = [\"Ansadf\", \"Bnasdf\", \"Cnasdf\", \"Dnsdf\", \"Enweqr\", \"Fnzxcv\", \"Gnzxcv\", \"Hnzxcv\", \"Inzxcv\"]\r\n    const rows = useRef(5)\r\n    const cols = useRef(5)\r\n\r\n    const changeRows = (event) => {\r\n        rows.current = event.target.value\r\n        console.log(rows.current)\r\n    }\r\n\r\n    const changeCols = (event) => {\r\n        cols.current = event.target.value\r\n        console.log(cols.current)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='lobbyPage'>\r\n\r\n            <div className=\"settings\">\r\n                <div className='title'> Settings </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Attempts(Rows):\r\n                    <select name=\"rows\" className=\"settingsSelect\" onChange={changeRows}>\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Letters(Columns):\r\n                    <select name=\"columns\" className=\"settingsSelect\" onChange={changeCols}>\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='startButtonContainer'>\r\n                    <Link to='/game' onClick={() => onSettingChange(setting)}> \r\n                        <button className='startButton'> Start Game </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"playersContainer\">\r\n                <div className=\"playerBoxes\">   \r\n                    {players.map((name, i) => {\r\n                        return <Row key={i} row={formatToRow(name)}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LobbyPage"]},"metadata":{},"sourceType":"module"}
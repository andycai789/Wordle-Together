{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\pages\\\\LobbyPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport '../../css/LobbyPage.css';\nimport Row from '../Row.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatToRow = word => {\n  let wordArray = word.toUpperCase().padEnd(7, ' ').split('');\n  return wordArray.map((letter, i) => ({\n    letter: letter,\n    color: ''\n  }));\n};\n\nconst LobbyPage = _ref => {\n  _s();\n\n  let {\n    socket,\n    onSettingsChange\n  } = _ref;\n  const [rowInput, setRowInput] = useState(5);\n  const [colInput, setColInput] = useState(5);\n  const [players, setPlayers] = useState([]);\n  const [isClient, setIsClient] = useState(true);\n  const [roomCode, setRoomCode] = useState(socket.id);\n  const [settings, setSettings] = useState({});\n  useEffect(() => {\n    socket.on('changeCode', response => {\n      setRoomCode(response);\n    });\n    socket.on('players', response => {\n      setPlayers(response);\n    });\n    socket.on('checkIfClient', response => {\n      setIsClient(response);\n    });\n    socket.on('changeRowSelect', newRow => {\n      setRowInput(newRow);\n    });\n    socket.on('changeColSelect', newCol => {\n      setColInput(newCol);\n    });\n  }, []);\n\n  const changeRows = event => {\n    setRowInput(event.target.value);\n    socket.emit('newRowSelect', event.target.value);\n  };\n\n  const changeCols = event => {\n    setColInput(event.target.value);\n    socket.emit('newColSelect', event.target.value);\n  };\n\n  const startGame = event => {\n    socket.emit('startGame', rowInput, colInput);\n    socket.on('changeSettings', settings => {\n      console.log(settings);\n      onSettingsChange(() => settings);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobbyPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \" Settings \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Code: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), roomCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [\"Number of Attempts(Rows):\", /*#__PURE__*/_jsxDEV(\"select\", {\n          disabled: isClient,\n          name: \"rows\",\n          className: \"settingsSelect\",\n          value: rowInput,\n          onChange: changeRows,\n          children: Array.from({\n            length: 12\n          }, (_, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", i + 5, \" \"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 68\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsForm\",\n        children: [\"Number of Letters(Columns):\", /*#__PURE__*/_jsxDEV(\"select\", {\n          disabled: isClient,\n          name: \"columns\",\n          className: \"settingsSelect\",\n          value: colInput,\n          onChange: changeCols,\n          children: Array.from({\n            length: 12\n          }, (_, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", i + 5, \" \"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 68\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/game\",\n          onClick: startGame,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: isClient,\n            className: \"startButton\",\n            children: \" Start Game \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playersContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerBoxes\",\n        children: players.map((player, i) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            row: formatToRow(player.name)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LobbyPage, \"+/A39jSzE/IYEiAkA/cfEtf2CcU=\");\n\n_c = LobbyPage;\nexport default LobbyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LobbyPage\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/pages/LobbyPage.jsx"],"names":["Link","useState","useEffect","Row","formatToRow","word","wordArray","toUpperCase","padEnd","split","map","letter","i","color","LobbyPage","socket","onSettingsChange","rowInput","setRowInput","colInput","setColInput","players","setPlayers","isClient","setIsClient","roomCode","setRoomCode","id","settings","setSettings","on","response","newRow","newCol","changeRows","event","target","value","emit","changeCols","startGame","console","log","Array","from","length","_","player","name"],"mappings":"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","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react'\r\nimport '../../css/LobbyPage.css';\r\nimport Row from '../Row.jsx';\r\n\r\nconst formatToRow = (word) => {\r\n    let wordArray = word.toUpperCase().padEnd(7, ' ').split('')\r\n    return wordArray.map((letter, i) => ({letter: letter, color: ''}))\r\n  }\r\n\r\nconst LobbyPage = ({socket, onSettingsChange}) => {\r\n    const [rowInput, setRowInput] = useState(5)\r\n    const [colInput, setColInput] = useState(5)\r\n    const [players, setPlayers] = useState([])\r\n    const [isClient, setIsClient] = useState(true)\r\n    const [roomCode, setRoomCode] = useState(socket.id)\r\n    const [settings, setSettings] = useState({})\r\n\r\n    useEffect(() => {\r\n        socket.on('changeCode', (response) => {\r\n            setRoomCode(response)\r\n        })\r\n    \r\n        socket.on('players', (response) => {\r\n            setPlayers(response)\r\n        })\r\n    \r\n        socket.on('checkIfClient', (response) => {\r\n            setIsClient(response)\r\n        })\r\n    \r\n        socket.on('changeRowSelect', (newRow) => {\r\n            setRowInput(newRow)\r\n        })\r\n    \r\n        socket.on('changeColSelect', (newCol) => {\r\n            setColInput(newCol)\r\n        })\r\n    \r\n   \r\n    }, [])\r\n\r\n    const changeRows = (event) => {\r\n        setRowInput(event.target.value)\r\n        socket.emit('newRowSelect', event.target.value)\r\n    }\r\n\r\n    const changeCols = (event) => {\r\n        setColInput(event.target.value)\r\n        socket.emit('newColSelect', event.target.value)\r\n    }\r\n\r\n    const startGame = (event) => {\r\n        socket.emit('startGame', rowInput, colInput)\r\n        socket.on('changeSettings', (settings) => {\r\n            console.log(settings)\r\n            onSettingsChange(() => settings)\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <div className='lobbyPage'>\r\n            <div className=\"settings\">\r\n                <div className='title'> Settings </div>\r\n\r\n                <div className='settingsForm'>\r\n                    <div> Code: </div>\r\n                    {roomCode}\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Attempts(Rows):\r\n                    <select disabled={isClient} name=\"rows\" className=\"settingsSelect\" value={rowInput} onChange={changeRows} >\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='settingsForm'>\r\n                    Number of Letters(Columns):\r\n                    <select disabled={isClient} name=\"columns\" className=\"settingsSelect\" value={colInput} onChange={changeCols}>\r\n                        {Array.from({length: 12}, (_,i) => {return <option key={i}> {i + 5} </option>})}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className='startButtonContainer'>\r\n                    <Link to='/game' onClick={startGame}> \r\n                        <button disabled={isClient} className='startButton'> Start Game </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"playersContainer\">\r\n                <div className=\"playerBoxes\">   \r\n                    {players.map((player, i) => {\r\n                        return <Row key={i} row={formatToRow(player.name)}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LobbyPage"]},"metadata":{},"sourceType":"module"}
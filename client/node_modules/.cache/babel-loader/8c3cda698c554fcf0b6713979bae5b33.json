{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andyc\\\\Desktop\\\\Web Programs\\\\Wordle with Friends\\\\client\\\\src\\\\components\\\\ColoredRow.jsx\";\nimport React from 'react';\nimport Row from './Row.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getColorFromLetter = color => {\n  if (color === 'GREEaN') {\n    return 'green';\n  } else if (color === 'YELLOW') {\n    return 'yellow';\n  } else if (color === 'GRAY') {\n    return 'gray';\n  } else {\n    return '';\n  }\n};\n\nconst formatToRow = (word, color) => {\n  let wordArray = word.toUpperCase().split('');\n  console.log(color);\n  color = color.toUpperCase();\n  return wordArray.map((letter, i) => ({\n    letter: letter,\n    color: getColorFromLetter(color)\n  }));\n};\n\nconst ColoredRow = _ref => {\n  let {\n    name,\n    color\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    row: formatToRow(name, color)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ColoredRow;\nexport default ColoredRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColoredRow\");","map":{"version":3,"sources":["C:/Users/andyc/Desktop/Web Programs/Wordle with Friends/client/src/components/ColoredRow.jsx"],"names":["React","Row","getColorFromLetter","color","formatToRow","word","wordArray","toUpperCase","split","console","log","map","letter","i","ColoredRow","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,MAAIA,KAAK,KAAK,QAAd,EAAwB;AACtB,WAAO,OAAP;AACD,GAFD,MAEO,IAAIA,KAAK,KAAK,QAAd,EAAwB;AAC7B,WAAO,QAAP;AACD,GAFM,MAEA,IAAIA,KAAK,KAAK,MAAd,EAAsB;AAC3B,WAAO,MAAP;AACD,GAFM,MAEA;AACL,WAAO,EAAP;AACD;AACF,CAVD;;AAYA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOF,KAAP,KAAiB;AACnC,MAAIG,SAAS,GAAGD,IAAI,CAACE,WAAL,GAAmBC,KAAnB,CAAyB,EAAzB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACI,WAAN,EAAR;AACA,SAAOD,SAAS,CAACK,GAAV,CAAc,CAACC,MAAD,EAASC,CAAT,MAAgB;AAACD,IAAAA,MAAM,EAAEA,MAAT;AAAiBT,IAAAA,KAAK,EAAED,kBAAkB,CAACC,KAAD;AAA1C,GAAhB,CAAd,CAAP;AACD,CALD;;AAOA,MAAMW,UAAU,GAAG,QAAmB;AAAA,MAAlB;AAACC,IAAAA,IAAD;AAAOZ,IAAAA;AAAP,GAAkB;AACpC,sBACE,QAAC,GAAD;AAAK,IAAA,GAAG,EAAEC,WAAW,CAACW,IAAD,EAAOZ,KAAP;AAArB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMW,U;AAMN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport Row from './Row.jsx'\r\n\r\nconst getColorFromLetter = (color) => {\r\n  if (color === 'GREEaN') {\r\n    return 'green'\r\n  } else if (color === 'YELLOW') {\r\n    return 'yellow'\r\n  } else if (color === 'GRAY') {\r\n    return 'gray'\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst formatToRow = (word, color) => {\r\n  let wordArray = word.toUpperCase().split('')\r\n  console.log(color)\r\n  color = color.toUpperCase()\r\n  return wordArray.map((letter, i) => ({letter: letter, color: getColorFromLetter(color)}))\r\n}\r\n\r\nconst ColoredRow = ({name, color}) => {\r\n  return (\r\n    <Row row={formatToRow(name, color)}/>\r\n  )\r\n}\r\n\r\nexport default ColoredRow"]},"metadata":{},"sourceType":"module"}